{"version":3,"file":"static/js/623.dc076bbe.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-07-phonebook/./src/components/Filter/Filter.module.css?fad1","redux/contacts/selectors.js","components/Filter/Filter.jsx","webpack://goit-react-hw-07-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-07-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-07-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-07-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInpt\":\"Filter_filterInpt__83mwp\"};","\nexport const phonebookSelector = (state) => state.phonebook.contacts;\nexport const phonebookFilter = (state) => state.phonebook.filter;\nexport const filteredNamesArr = (state) => [...(state.phonebook.contacts.items.filter(contact =>\n   contact.name.toLowerCase().includes(state.phonebook.filter.toLowerCase())))].sort((a, b) => a.name.localeCompare(b.name));\nexport const selectLoading = state => state.phonebook.contacts.isLoading;\nexport const phonebook = (state) => state.phonebook;\n","import React from \"react\";\nimport css from 'components/Filter/Filter.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { phonebookFilter } from \"redux/contacts/selectors\";\nimport { filterContacts } from \"redux/contacts/phonebookSlice\";\n\nexport const Filter = () => {\n   const filter = useSelector(phonebookFilter);\n   const dispatch = useDispatch();\n   const handleFilterChange = (e) => {\n      dispatch(filterContacts(e.currentTarget.value))\n      };    \n\n   return <label className={css.filterLabel}>Find contacts by name:\n         <input\n            type=\"text\"\n            value={filter}\n            onChange={handleFilterChange}\n            className={css.filterInpt}\n         />\n   </label>\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"fhonebForm\":\"ContactForm_fhonebForm__j6dZC\",\"fhonebFormLabel\":\"ContactForm_fhonebFormLabel__A3S6g\",\"fhonebFormBtn\":\"ContactForm_fhonebFormBtn__eKdr9\",\"fhonebFormInpt\":\"ContactForm_fhonebFormInpt__1NbFE\"};","import { React } from \"react\";\nimport css from 'components/ContactForm/ContactForm.module.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { phonebookSelector } from \"redux/contacts/selectors\";\nimport { addContactThunk } from \"redux/contacts/thunks\";\nimport { toast } from 'react-toastify';\n\n\nexport const ContactForm = () => {\n   const { items } = useSelector(phonebookSelector);\n   const dispatch = useDispatch();\n   \n   const handleFormSubmit = (e) => {\n      e.preventDefault();\n      const newContact = {\n         name: e.currentTarget.elements.name.value,\n         number: e.currentTarget.elements.number.value,         \n      };\n       const filteredContact = items.filter(contact =>\n          contact.name.toLowerCase() === newContact.name.toLowerCase()).length;\n    \n      if (filteredContact) {\n         return toast.info(`${newContact.name} is already in Contacts`)\n      } else {\n         dispatch(addContactThunk(newContact));\n         e.currentTarget.reset();\n      };\n   };\n\n   return (\n         <form\n            className={css.fhonebForm}\n            onSubmit={handleFormSubmit}>\n               <label className={css.fhonebFormLabel}>Name \n               <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            className={css.fhonebFormInpt}\n               />\n               </label>\n                <label className={css.fhonebFormLabel}>Number \n               <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            className={css.fhonebFormInpt}\n               />\n               </label>\n               <button type=\"submit\" className={css.fhonebFormBtn}>Add contact</button>\n      </form>)   \n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactList_contactsList__7leRd\",\"contactsListItem\":\"ContactList_contactsListItem__qOLn3\",\"contactsListSpan\":\"ContactList_contactsListSpan__Xa5KJ\",\"contactsListBtn\":\"ContactList_contactsListBtn__8NsJj\"};","import React, { useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport css from 'components/ContactList/ContactList.module.css';\nimport { filteredNamesArr } from \"redux/contacts/selectors\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchContactsThunk, deleteContactThunk } from \"redux/contacts/thunks\";\n\nexport const ContactList = () => {\n   const filteredNames = useSelector(filteredNamesArr);\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      dispatch(fetchContactsThunk())\n   }, [dispatch]);\n\n   const deleteContactFromList = contactId => {\n      dispatch(deleteContactThunk(contactId))\n   };\n\n   return (\n      <ul className={css.contactsList}>\n         {filteredNames.map(({ id, name, number }) => (\n            <li key={id} className={css.contactsListItem}>\n               <span className={css.contactsListSpan}>{name}:</span>\n               <span className={css.contactsListSpan}>{number}</span>\n               <button\n                  onClick={() => deleteContactFromList(id)}\n                  className={css.contactsListBtn}>Delete\n               </button>\n            </li>\n         ))}\n      </ul>)\n};\n\nContactList.propTypes = {\n   filteredNames: PropTypes.arrayOf(\n      PropTypes.shape({\n         id: PropTypes.string.isRequired,\n         name: PropTypes.string.isRequired,\n         number: PropTypes.string.isRequired,\n      }).isRequired\n   )\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Dna } from 'react-loader-spinner';\nimport css from 'components/Loader/Loader.module.css';\n\n\nexport const Loader = () => (\n   <div className={css.loader}    \n>\n <Dna\n  visible={true}\n  height=\"250\"\n  width=\"250\"\n  ariaLabel=\"dna-loading\"\n  wrapperStyle={{}}\n   wrapperClass=\"dna-wrapper\"      \n/>\n   </div>  \n)","// extracted by mini-css-extract-plugin\nexport default {\"pageTitle\":\"Contacts_pageTitle__3thiQ\",\"title\":\"Contacts_title__LxdN4\",\"contactsArea\":\"Contacts_contactsArea__V3a5i\",\"pageWrap\":\"Contacts_pageWrap__cXjZk\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContactsThunk } from 'redux/contacts/thunks';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport {Loader} from '../../components/Loader/Loader'\nimport css from './Contacts.module.css'\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n        {isLoading && <Loader/>}\n        <div\n           className={css.pageWrap}\n        >\n           <h1\n              className={css.pageTitle}\n           >Phonebook</h1>\n         <ContactForm\n         />\n           <h2\n              className={css.title}\n           >Contacts</h2>\n           <div\n              className={css.contactsArea}\n           >\n            <Filter\n            />\n            <ContactList\n            />\n            </div>\n      </div>\n    </>\n  );\n}"],"names":["phonebookSelector","state","phonebook","contacts","phonebookFilter","filter","filteredNamesArr","items","contact","name","toLowerCase","includes","sort","a","b","localeCompare","selectLoading","isLoading","Filter","useSelector","dispatch","useDispatch","className","css","type","value","onChange","e","filterContacts","currentTarget","ContactForm","onSubmit","preventDefault","newContact","elements","number","length","toast","addContactThunk","reset","pattern","title","required","ContactList","filteredNames","useEffect","fetchContactsThunk","map","id","onClick","contactId","deleteContactThunk","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","Contacts","Helmet"],"sourceRoot":""}